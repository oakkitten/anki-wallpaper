# Packages anki and aqt do not pin their requirements,
# so we install them using the requirements file as constraints file.
# This file is *not* the one used for releases, and it includes development packages,
# therefore we don't use it as a requirements file.
#
# As pip turns on hash checking if there's one hash in the file,
# and because pip doesn't allow to opt out of hash checking via a command line option,
# and because pip requires hashes to be present for either all packages or none,
# and because the file does not contain hashes for anki/aqt itself,
# “opt out” via removing all hashes from the file using sed.
#
# For pre-release Anki, we can't use the version to retrieve the requirements file,
# as for some reason pre-release Anki versions don't get git tags.
# Therefore we record the latest commit when we encounter a new pre-release version.

[tox]
minversion = 3.24
skipsdist = true
skip_install = true
requires =
    pypi-timemachine
envlist =
    py38-test-anki2.1.49
    py39-test-anki2.1.51-qt{5,6}
    py39-test-anki2.1.52-qt{5,6}
    py39-test-pre-anki2.1.53rc1-qt6

[testenv:.tox]
install_command =
    python -m pip install {packages}

[testenv]
install_command =
    bash -xc ' \
        set -eux; trap "kill \$(jobs -p)" EXIT; \
        VERSION=$(echo {envname} | perl -nle "m/anki([\d\.a-z]+)/; print \$1"); \
        UPLOAD_TIME=$(curl https://pypi.org/pypi/anki/json \
            | jq -r ".releases.\"$VERSION\"[0].upload_time_iso_8601"); \
        CUTOFF_TIME=$(date --utc -d "$UPLOAD_TIME +1 hour" "+%Y-%m-%dT%H:%M:%S"); \
        mkdir {envtmpdir}; \
        {toxworkdir}/.tox/bin/python -um pypi_timemachine $CUTOFF_TIME > {envtmpdir}/tm & \
        SERVER=$(tail -f {envtmpdir}/tm | perl -nle "m/(http\S+)/; print \$1; exit 0;"); \
        echo "ok $SERVER"; \
        python -m pip install --index-url "$SERVER" "anki==$VERSION" "$AQT==$VERSION"; \
        python -m pip install "$\{@:1\}"; \
    ' {packages}

commands =
    env HOME={envtmpdir}/home xvfb-run python -m pytest {posargs}

setenv =
    DISABLE_QT5_COMPAT=1

    !qt{5,6}: AQT=aqt
    qt5: AQT=aqt[qt5]
    qt6: AQT=aqt[qt6]

allowlist_externals =
    bash
    env
    xvfb-run

deps =
    pytest==7.1.1
    pytest-forked==1.4.0
    pytest-anki @ git+https://github.com/oakkitten/pytest-anki.git@a0d27aa5
